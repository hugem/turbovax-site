{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hugema/Dropbox/documents/coding/turbovax-site/src/components/Appointments.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport Box from \"@material-ui/core/Box\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { Card, LabelCard } from \"./index\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\nexport default class Appointments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sites: []\n    };\n  }\n\n  mapPersonToVars(props) {\n    return {\n      siteName: props.site_name,\n      portalName: props.portal_name,\n      updatedAt: props.updated_at,\n      url: props.url,\n      appointments: props.appointment_times,\n      isAvailable: props.is_available\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://spreadsheets.google.com/feeds/cells/10l-N3bDVpJPH5IWc3Jak2jzWr0BRNax65jjxzAo_tLs/5/public/full?alt=json`).then(res => {\n      const jsonList = res.data.feed.entry;\n      const mappedSites = jsonList.map(list => this.mapPersonToVars(JSON.parse(list.content.$t)));\n      const sortedSites = mappedSites.sort((a, b) => {\n        if (a.updatedAt > b.updatedAt) {\n          return -1;\n        }\n\n        if (a.updatedAt < b.updatedAt) {\n          return 1;\n        }\n\n        return 0;\n      });\n      this.setState({\n        sites: mappedSites\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        smDown: true,\n        children: /*#__PURE__*/_jsxDEV(LabelCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), this.state.sites.map(site => /*#__PURE__*/_jsxDEV(Card, { ...site\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/hugema/Dropbox/documents/coding/turbovax-site/src/components/Appointments.jsx"],"names":["React","makeStyles","axios","Box","Hidden","Card","LabelCard","useStyles","theme","root","flexGrow","paper","textAlign","color","palette","text","secondary","Appointments","Component","state","sites","mapPersonToVars","props","siteName","site_name","portalName","portal_name","updatedAt","updated_at","url","appointments","appointment_times","isAvailable","is_available","componentDidMount","get","then","res","jsonList","data","feed","entry","mappedSites","map","list","JSON","parse","content","$t","sortedSites","sort","a","b","setState","render","site"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,SAAhC;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJgC,CAAZ,CAAD,CAA5B;AAWA,eAAe,MAAMC,YAAN,SAA2BjB,KAAK,CAACkB,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACxDC,KADwD,GAChD;AACNC,MAAAA,KAAK,EAAE;AADD,KADgD;AAAA;;AAKxDC,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACrB,WAAO;AACLC,MAAAA,QAAQ,EAAED,KAAK,CAACE,SADX;AAELC,MAAAA,UAAU,EAAEH,KAAK,CAACI,WAFb;AAGLC,MAAAA,SAAS,EAAEL,KAAK,CAACM,UAHZ;AAILC,MAAAA,GAAG,EAAEP,KAAK,CAACO,GAJN;AAKLC,MAAAA,YAAY,EAAER,KAAK,CAACS,iBALf;AAMLC,MAAAA,WAAW,EAAEV,KAAK,CAACW;AANd,KAAP;AAQD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBhC,IAAAA,KAAK,CACFiC,GADH,CAEK,iHAFL,EAIGC,IAJH,CAISC,GAAD,IAAS;AACb,YAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcC,KAA/B;AACA,YAAMC,WAAW,GAAGJ,QAAQ,CAACK,GAAT,CAAcC,IAAD,IAC/B,KAAKvB,eAAL,CAAqBwB,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAL,CAAaC,EAAxB,CAArB,CADkB,CAApB;AAIA,YAAMC,WAAW,GAAGP,WAAW,CAACQ,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7C,YAAID,CAAC,CAACxB,SAAF,GAAcyB,CAAC,CAACzB,SAApB,EAA+B;AAC7B,iBAAO,CAAC,CAAR;AACD;;AACD,YAAIwB,CAAC,CAACxB,SAAF,GAAcyB,CAAC,CAACzB,SAApB,EAA+B;AAC7B,iBAAO,CAAP;AACD;;AACD,eAAO,CAAP;AACD,OARmB,CAApB;AAUA,WAAK0B,QAAL,CAAc;AAAEjC,QAAAA,KAAK,EAAEsB;AAAT,OAAd;AACD,KArBH;AAsBD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,GAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,KAAKnC,KAAL,CAAWC,KAAX,CAAiBuB,GAAjB,CAAsBY,IAAD,iBACpB,QAAC,IAAD,OAAUA;AAAV;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AApDuD","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport Box from \"@material-ui/core/Box\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { Card, LabelCard } from \"./index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default class Appointments extends React.Component {\n  state = {\n    sites: [],\n  };\n\n  mapPersonToVars(props) {\n    return {\n      siteName: props.site_name,\n      portalName: props.portal_name,\n      updatedAt: props.updated_at,\n      url: props.url,\n      appointments: props.appointment_times,\n      isAvailable: props.is_available,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://spreadsheets.google.com/feeds/cells/10l-N3bDVpJPH5IWc3Jak2jzWr0BRNax65jjxzAo_tLs/5/public/full?alt=json`\n      )\n      .then((res) => {\n        const jsonList = res.data.feed.entry;\n        const mappedSites = jsonList.map((list) =>\n          this.mapPersonToVars(JSON.parse(list.content.$t))\n        );\n\n        const sortedSites = mappedSites.sort((a, b) => {\n          if (a.updatedAt > b.updatedAt) {\n            return -1;\n          }\n          if (a.updatedAt < b.updatedAt) {\n            return 1;\n          }\n          return 0;\n        });\n\n        this.setState({ sites: mappedSites });\n      });\n  }\n\n  render() {\n    return (\n      <Box>\n        <Hidden smDown>\n          <LabelCard />\n        </Hidden>\n        {this.state.sites.map((site) => (\n          <Card {...site} />\n        ))}\n      </Box>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}